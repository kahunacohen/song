package templates

import (
    "github.com/kahunacohen/songs/db"
)

templ Song(song db.Song, uri string, uriEditMode string, editMode bool) {
    <div id="wrapper" x-data="{ saveSuccess: false }" >
    if editMode {
        <h2 class="mb-3">Edit "{song.Title}"</h2>
        // @Alert("Saved song", "saveSuccess")
        <template x-if="saveSuccess">
            <div x-data="toast('bar!')">
                <div x-transition x-show="visible" x-text="message"></div>
            </div>
        </template>
        <!-- form can save (stay in edit mode) and put 
        post when submitting and redirecting back to view mode. Standard
        html form handles submitting, htmx handles saving. -->
        <form action={templ.SafeURL(uri)} method="post">
            @SongFormContents(song)
            <button hx-delete={uri} type="submit">
                Delete
            </button>
            <button
                hx-put={uri}
                hx-target="#song-form-contents"
                x-on:htmx:after-request="saveSuccess = true"
                type="submit">Save and continue editing
            </button>
            <button
                type="submit">Save
            </button>
        </form>
        <script>
         document.addEventListener('alpine:init', () => {
        Alpine.data("toast", (message) => ({
            visible: false,
			message: "",
			init() {
				this.message = message;
				setTimeout(() => this.show(), 500);
			},
            show() {
                this.visible = true;
				setTimeout(() => this.visible = false, 3000);
            },
        }))
    })
        </script>
    } else {
        <h2 class="mb-3">{song.Title}</h2>
        <div>{song.Lyrics}</div>
        <button 
            hx-get={uriEditMode} 
            hx-swap="innerHTML" 
            hx-target="body"
            hx-push-url="true" 
            class="btn btn-primary">Edit</button>
    }
    </div>
}